{"version":3,"sources":["redux/selectors.js","styles/components.js","redux/actions.js","components/NameInput.js","components/LastNameInput.js","components/PhoneInput.js","components/EmailInput.js","components/SexSelect.js","components/AddressInput.js","components/AgreementCheckbox.js","components/FormRegister.js","components/UserRow.js","styles/global.js","App.js","serviceWorker.js","redux/index.js","store/configureStore.js","index.js","styles/theme.js"],"names":["getUsersSelector","state","users","getSuggestResultSelector","suggestResult","Label","styled","label","theme","display","margin","fontSizes","fontWeight","colors","Input","input","sizes","width","height","padding","Form","form","Select","select","SET_QUERY","SET_SUGGEST_RESULT","SET_USERS","ADD_USER","setSuggestResultAction","payload","type","NameInput","register","error","htmlFor","id","name","placeholder","required","message","LastNameInput","PhoneInput","pattern","value","EmailInput","Option","option","SexSelect","AdddressSuggest","div","AddressInput","control","field","useController","rules","defaultValue","dispatch","useDispatch","suggestions","useSelector","useState","selectedAdress","setSelectedAdress","useEffect","query","a","axios","get","dataFromServer","response","data","items","onChange","event","target","map","item","onClick","title","AgreementCheckbox","FormRegister","useForm","defaultValues","firstName","lastName","phone","email","gender","address","handleSubmit","reset","errors","formState","isSubmitSuccessful","onSubmit","agreement","UserRow","user","GlobalStyle","createGlobalStyle","App","console","log","Container","bg","className","length","number","Boolean","window","location","hostname","match","initialState","composeEnhancers","compose","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","danger","container","footer","modal","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0dc80d7d.chunk.js","sourcesContent":["export const getUsersSelector = (state) => state.users;\nexport const getSuggestResultSelector = (state) => state.suggestResult;","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: ${({ theme }) => theme.display.label};\n  margin-bottom: ${({ theme }) => theme.margin.label}px;\n  font-size: ${({ theme }) => theme.fontSizes.label}px;\n  font-weight: ${({ theme }) => theme.fontWeight.label};\n  // color: ${({ theme }) => theme.colors.label};\n`\n\nexport const Input = styled.input`\n  border: 1px solid #154360;\n  border-radius: 8px;\n  // width: ${({ theme }) => theme.sizes.input.width}%;\n  height: ${({ theme }) => theme.sizes.input.height}px;\n  margin-bottom: ${({ theme }) => theme.margin.input}px;\n  font-size: ${({ theme }) => theme.fontSizes.input}px;\n  padding: 0 ${({ theme }) => theme.padding.input}px;\n  // padding-left: 5px;\n  width: 100%;\n`\n\nexport const Form = styled.form`\n  margin: 0;\n`\n\nexport const Select = styled.select`\n  width: 100%;\n  height: 30px;\n  border-radius: 8px;\n  padding: 0 ${({ theme }) => theme.padding.input}px;\n  font-size: ${({ theme }) => theme.fontSizes.input}px;\n  margin-bottom: 15px;\n`","import axios from 'axios';\n\nexport const SET_QUERY = 'SET_QUERY';\nexport const SET_SUGGEST_RESULT = 'SET_SUGGEST_RESULT';\nexport const SET_USERS = 'SET_USERS';\nexport const ADD_USER = 'ADD_USERS';\n\nexport const setQueryAction = (payload) => ({\n  type: SET_QUERY,\n  payload,\n});\n\nexport const setUsersAction = (payload) => ({\n  type: SET_USERS,\n  payload,\n});\n\nexport const setSuggestResultAction = (payload) => ({\n  type: SET_SUGGEST_RESULT,\n  payload,\n});\n\nexport const setAddUserAction = (payload) => ({\n  type: ADD_USER,\n  payload,\n});\n\nexport const getAddress = (query) => {\n  return async (dispatch) => {\n    const dataFromServer = await axios.get(`https://autocomplete.search.hereapi.com/v1/autocomplete?q=${query}&lang=en&apiKey=z6_qq1549ZHNrnLSE3ov9dlBZukZu2MobGSj7gEuBmQ`);\n    // const dataFromServer = await axios.get(`https://autosuggest.search.hereapi.com/v1/autosuggest?q=${query}&apiKey=z6_qq1549ZHNrnLSE3ov9dlBZukZu2MobGSj7gEuBmQ`);\n    const response = dataFromServer.data.items;\n\n    dispatch(setSuggestResultAction(response));\n  }\n}","import React from \"react\";\nimport { Input, Label } from '../styles/components';\n\nexport const NameInput = ({ register, error }) => (\n  <>\n    <Label htmlFor=\"firstName\">First name</Label>\n    <Input\n      id=\"firstName\"\n      name=\"firstName\"\n      type=\"text\"\n      placeholder=\"First name\"\n      {...register(\"firstName\", { required: 'First name is required' })}\n    />\n\n    {error && <p>{error.message}</p>}\n  </>\n);","import React from \"react\";\nimport { Input, Label } from '../styles/components';\n\nexport const LastNameInput = ({ register, error }) => (\n  <div>\n    <Label htmlFor=\"lastName\">Last name</Label>\n    <Input\n      id=\"lastName\"\n      name=\"lastName\"\n      type=\"text\"\n      placeholder=\"Last name\"\n      {...register(\"lastName\", { required: 'Last name is required' })}\n    />\n\n    {error && <p>{error.message}</p>}\n  </div>\n);","import React from \"react\";\n// import styled from \"styled-components\";\nimport { Input, Label } from '../styles/components';\n\n// const Label = styled.label`\n//   display: ${({ theme }) => theme.display.label};\n//   margin-bottom: ${({ theme }) => theme.margin.label}px;\n//   font-size: ${({ theme }) => theme.fontSizes.label}px;\n//   font-weight: ${({ theme }) => theme.fontWeight.label};\n//   // color: ${({ theme }) => theme.colors.label};\n// `\n\n// const Input = styled.input`\n//   border: 1px solid #154360;\n//   border-radius: 8px;\n//   // width: ${({ theme }) => theme.sizes.input.width}%;\n//   height: ${({ theme }) => theme.sizes.input.height}px;\n//   margin-bottom: ${({ theme }) => theme.margin.input}px;\n//   font-size: ${({ theme }) => theme.fontSizes.input}px;\n//   padding: 0 ${({ theme }) => theme.padding.input}px;\n// `\n\nexport const PhoneInput = ({ register, error }) => (\n  <div>\n    <Label htmlFor=\"phone\">Phone</Label>\n    <Input\n      id=\"phone\"\n      name=\"phone\"\n      type=\"tel\"\n      placeholder=\"Phone number\"\n      {...register(\"phone\", { \n        required: 'Phone number is required', \n        pattern: {\n          value: /^\\d+$/,\n          message: 'Phone must include only numbers',\n        },\n        // validate: (value) => {\n        //   // return /^\\d+$/.test(value) || \"must include lower, upper, number, and special chars\"\n        //   return value.match(/\\D+/g, '') || \"must include lower, upper, number, and special chars\"\n        // },\n      })}\n    />\n\n    {error && <p>{error.message}</p>}\n  </div>\n);","import React from \"react\";\nimport { Input, Label } from '../styles/components';\n\nexport const EmailInput = ({ register, error }) => (\n  <div>\n    <Label htmlFor=\"email\">Email</Label>\n    <Input\n      id=\"email\"\n      name=\"email\"\n      type=\"text\"\n      placeholder=\"Email\"\n      {...register(\"email\", { \n        required: 'Email is required', \n        pattern: {\n          value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n          message: 'Invalid email',\n        },\n      })}\n    />\n\n    {error && <p>{error.message}</p>}\n  </div>\n);","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Label, Select } from '../styles/components';\n\n// const Container = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   margin-bottom: 15px;\n// `\n\n// const Label = styled.label`\n//   margin-right: ${({ theme }) => theme.margin.label}px;\n//   font-size: ${({ theme }) => theme.fontSizes.label}px;\n//   font-weight: ${({ theme }) => theme.fontWeight.label};\n//   // color: ${({ theme }) => theme.colors.label};\n// `\n\nconst Option = styled.option`\n  font-size: 14px;\n`\n\nexport const SexSelect = ({ register, error }) => (\n  <>\n    <Label htmlFor=\"sex\">Gender</Label>\n    <Select id=\"gender\" \n      {...register(\"gender\", { required: 'Gender is required' })}\n    >\n      <Option value=\"\">Select Gender</Option>\n      <Option value=\"male\">Male</Option>\n      <Option value=\"female\">Female</Option>\n    </Select>\n\n    {error && <p>{error.message}</p>}\n  </>\n);","import React, { useState, useEffect } from \"react\";\nimport styled from 'styled-components';\nimport { Input, Label } from '../styles/components';\nimport { useController } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSuggestResultSelector } from '../redux/selectors';\nimport { getAddress, setSuggestResultAction } from '../redux/actions';\n\nconst AdddressSuggest = styled.div`\n  border-bottom: 1px solid black;\n  width: 250px;\n  padding: 0 ${({ theme }) => theme.padding.input}px;\n  font-size: 12px;\n  margin-bottom: 15px;\n  position:relative; \n  z-index:1;\n`\n\nexport const AddressInput = ({ error, control }) => {\n  const { field } = useController({ name: 'address', rules: { required: 'Address is required' }, control, defaultValue: ''});\n  const dispatch = useDispatch();\n  let suggestions = useSelector(getSuggestResultSelector);\n  const [selectedAdress, setSelectedAdress] = useState('');\n\n  useEffect(() => {\n    if (selectedAdress !== field.value) {\n      dispatch(getAddress(field.value))\n    }\n  }, [dispatch, selectedAdress, field.value]);\n\n  return (\n    <>\n      <Label htmlFor=\"address\">Address</Label>\n      <Input\n        id=\"address\"\n        name=\"address\"\n        type=\"text\"\n        value={field.value}\n        onChange={(event) => {\n          field.onChange(event.target.value)\n        }}\n        placeholder=\"Address\"\n        {...field}\n      />\n\n      {error && <p>{error.message}</p>}\n\n      {suggestions && suggestions.map(item => (\n        <AdddressSuggest \n          key={item.id}\n            onClick={() => {\n            field.onChange(item.title);\n            setSelectedAdress(item.title);\n            dispatch(setSuggestResultAction([]));\n          }}\n        >\n          {item.title}\n        </AdddressSuggest>\n      ))}\n  </>\n  )\n};","import React from \"react\";\nimport styled from 'styled-components';\nimport { Label } from '../styles/components';\n\nconst Input = styled.input`\n  position:relative; \n`\n\nexport const AgreementCheckbox = ({ register, error }) => (\n  <>\n    <Input\n      id=\"agreement\"\n      name=\"agreement\"\n      type=\"checkbox\"\n      {...register(\"agreement\", { required: 'Agreement is required' })}\n    />\n    <Label htmlFor=\"agreement\">I agree with terms and conditions</Label>\n\n    {error && <p>{error.message}</p>}\n  </>\n);","import React, { useEffect } from \"react\";\nimport { Form } from '../styles/components';\nimport { useForm } from \"react-hook-form\";\nimport { setAddUserAction } from '../../src/redux/actions';\nimport { NameInput } from \"./NameInput\"; \nimport { LastNameInput } from \"./LastNameInput\"; \nimport { PhoneInput } from \"./PhoneInput\";\nimport { EmailInput } from \"./EmailInput\";\nimport { SexSelect } from \"./SexSelect\";\nimport { AddressInput } from \"./AddressInput\";\nimport { AgreementCheckbox } from \"./AgreementCheckbox\";\nimport { useDispatch } from \"react-redux\";\n\nexport const FormRegister = () => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, reset, control, formState: { errors }, formState: { isSubmitSuccessful } } \n  = useForm({ defaultValues: {\n    firstName: '',\n    lastName: '',\n    phone: '',\n    email: '',\n    gender: '',\n    address: '',\n  }});\n\n  const onSumbit = (data) => {\n    dispatch(setAddUserAction(data));\n  }\n\n  useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset();\n    }\n  }, [isSubmitSuccessful, reset])\n\n  return (\n  <Form onSubmit={handleSubmit(onSumbit)}>\n    <NameInput register={register} error={errors.firstName} />\n    <LastNameInput register={register} error={errors.lastName} />\n    <PhoneInput register={register} error={errors.phone} />\n    <EmailInput register={register} error={errors.email} />\n    <SexSelect register={register} error={errors.gender} />\n    <AddressInput error={errors.address} control={control} />\n    <AgreementCheckbox register={register} error={errors.agreement} />\n\n    <button type=\"submit\">Register</button>\n  </Form>\n  );\n};","import React from \"react\";\n\nexport const UserRow = ({ user }) => (\n  <tr>\n    <td>{user.firstName}</td>\n    <td>{user.lastName}</td>\n    <td>{user.phone}</td>\n    <td>{user.email}</td>\n    <td>{user.gender}</td>\n    <td>{user.address}</td>\n  </tr>\n);","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  html {\n    font-family: sans-serif;\n  }\n\n  body {\n    display: grid;\n    place-content: center;\n    // text-align: center;\n    margin: 0;\n  }\n`\n\nexport default GlobalStyle;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getUsersSelector } from './redux/selectors';\nimport { FormRegister } from \"./components/FormRegister\";\nimport { UserRow } from \"./components/UserRow\";\nimport styled from 'styled-components';\nimport GlobalStyle from './styles/global';\n\nconst App = () => {\n  const users = useSelector(getUsersSelector);\n  console.log(users);\n\n  const Container = styled.div`\n    background-color: ${({ theme }) => theme.colors.bg};\n    // width: max-content;\n    // margin: 0 auto;\n    border: 1px dashed black;\n    border-radius: 8px;\n    padding: 20px 50px;\n  `\n\n  return (\n    <>\n    <GlobalStyle />\n    <Container className=\"App\">\n      <h1>Sign up</h1>\n        <FormRegister />\n\n    {users.length !== 0 && (\n      <table>\n        <thead>\n          <tr>\n            <th>First name</th>\n            <th>Last Name</th>\n            <th>Phone</th>\n            <th>Email</th>\n            <th>Gender</th>\n            <th>Address</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {users.map(user => (\n            <UserRow key={user.number} user={user}/>\n          ))}\n        </tbody>\n      </table>\n    )}\n    </Container>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // eslint-disable-next-line\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // eslint-disable-next-line\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // eslint-disable-next-line\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      // eslint-disable-next-line\n      console.error('Error during service worker registrationOwner:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // eslint-disable-next-line\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        // eslint-disable-next-line\n        console.error(error.message);\n      });\n  }\n}\n","// import { combineReducers } from 'redux';\nimport { SET_QUERY, SET_SUGGEST_RESULT, SET_USERS, ADD_USER } from './actions';\n\nconst initialState = {\n  query: '',\n  suggestResult: [],\n  users: [],\n};\n\nexport const rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_QUERY:\n      return {\n        ...state,\n        query: action.payload,\n      }\n\n    case SET_USERS:\n      return {\n        ...state,\n        users: action.payload,\n      }\n\n    case ADD_USER:\n      return {\n        ...state,\n        users: [...state.users, action.payload],\n      }\n\n    case SET_SUGGEST_RESULT:\n      return {\n        ...state,\n        suggestResult: action.payload,\n      }\n\n    default:\n      return state;\n  }\n} \n\n// export const rootReducer = combineReducers({ reducer })\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { rootReducer } from '../redux'\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers = (process.env.NODE_ENV !== 'production' &&\n  typeof window !== 'undefined' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\nimport { store } from \"./store/configureStore\";\nimport { Provider } from \"react-redux\";\nimport { ThemeProvider } from 'styled-components';\nimport { baseTheme } from './styles/theme';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={baseTheme}>\n      <React.StrictMode>\n          <App/>\n      </React.StrictMode>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister()\n","export const baseTheme = {\n  colors: {\n    bg: '#EAF2F8',\n    label: '#3498DB',\n    danger: '#f44336',\n  },\n\n  sizes: {\n    input: { width: 100, height: 30 },\n    container: { width: 1200 },\n    footer: { height: 128 },\n    modal: { width: 540 },\n  },\n\n  fontSizes: {\n    label: 14,\n    input: 16,\n  },\n\n  fontWeight: {\n    label: 'bold',\n  },\n\n  margin: {\n    label: 3,\n    input: 15,\n    // title: \n    // input:\n  },\n\n  padding: {\n    input: 15,\n    // title: \n    // input:\n  },\n\n  display: {\n    label: 'block',\n  }\n}"],"sourceRoot":""}